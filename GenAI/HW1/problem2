{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Rtniewi/kcwiertniewicz-IDS/blob/main/Katrina_Cwiertnieiwcz_Assignment_1_Problem_2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "//***Katrina Cwiertniewicz\n",
        "//*** CSC 330\n",
        "//9/12/2024\n",
        "//Assignment 1 Problem 2\n",
        "####The purpose of this assignment is to modify the classification method to use likelihoods calculated based on distances to land points instead of a simple bounding box. \"Land\" points are classified if the likelihood threshold is greater than 0.5 and \"Sea\" otherwise."
      ],
      "metadata": {
        "id": "yxHLwiw7KdpU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Importing Libraries\n",
        "\n",
        "# numerical operations\n",
        "import numpy as np\n",
        "\n",
        "# used for plotting\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# used for calculating distances\n",
        "from scipy.spatial import distance"
      ],
      "metadata": {
        "id": "c6W37P5oTEJZ"
      },
      "execution_count": 25,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Defining Known Land Mass Points\n",
        "\n",
        "# A dictionary where each key is a continent and the value is a list of tuples\n",
        "# representing points on that continent.\n",
        "\n",
        "land_points = {\n",
        "    'South America': [(-30, -60), (-15, -50), (0, -45), (15, -30), (30, -20)],\n",
        "    'Australia': [(50, 10), (55, 0), (60, 10), (65, 20), (70, 30)],\n",
        "    'Asia': [(20, 60), (30, 70), (40, 80), (50, 90), (60, 100)],\n",
        "    'Africa': [(0, 20), (10, 20), (20, 30), (30, 40), (40, 50)],\n",
        "    'Europe': [(-35, 140), (-30, 145), (-25, 150), (-20, 155), (-15, 160)]\n",
        "}\n"
      ],
      "metadata": {
        "id": "R6zho4btTLhs"
      },
      "execution_count": 26,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Defining a Grid of Points\n",
        "\n",
        "# Create a grid of points with latitude ranging from -90 to 90 and longitude\n",
        "# from -180 to 180 in steps of 10.\n",
        "\n",
        "grid_points = [(x, y) for x in range(-90, 91, 10) for y in range(-180, 181, 10)]\n"
      ],
      "metadata": {
        "id": "U-gG2MtiTe5s"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Calculating Prior Probabilities\n",
        "\n",
        "# This function calculates the prior probabilities of a point being land or sea based on\n",
        "# the number of land points versus the total points.\n",
        "\n",
        "def calculate_prior_probabilities(land_points, total_points):\n",
        "    P_land = sum(len(points) for points in land_points.values()) / total_points\n",
        "    P_sea = 1 - P_land\n",
        "\n",
        "    return P_land, P_sea\n",
        "\n"
      ],
      "metadata": {
        "id": "fnjsSQAPUB3T"
      },
      "execution_count": 28,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Calculating Likelihoods\n",
        "\n",
        "# This function calculates the likelihoods of points being land or sea based on their distances\n",
        "# to the nearest land point.\n",
        "\n",
        "# The likelihood decreases exponentially with increasing distance from land.\n",
        "\n",
        "def calculate_likelihoods(grid_points, land_points):\n",
        "    likelihoods_land = {}\n",
        "    likelihoods_sea = {}\n",
        "\n",
        "    all_land_points = [point for points in land_points.values() for point in points]\n",
        "\n",
        "    for point in grid_points:\n",
        "        distances_to_land = distance.cdist([point], all_land_points, 'euclidean').min()\n",
        "        likelihoods_land[point] = np.exp(-distances_to_land)  # Exponential decay\n",
        "        likelihoods_sea[point] = 1 - likelihoods_land[point]  # Opposite of land\n",
        "\n",
        "    return likelihoods_land, likelihoods_sea\n"
      ],
      "metadata": {
        "id": "1nUVX13ZUxFS"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Classifying Points\n",
        "\n",
        "# This function classifies a point as land if the likelihood of being land is\n",
        "# 0.5, otherwise classifies it as sea.\n",
        "\n",
        "def classify_point(point, likelihoods_land):\n",
        "\n",
        "    if likelihoods_land[point] >= 0.5:\n",
        "        return 'Land'\n",
        "    else:\n",
        "        return 'Sea'\n"
      ],
      "metadata": {
        "id": "wmAhqU02VYH4"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Plotting the Points and Model\n",
        "\n",
        "# This functions plots the land points and test points of\n",
        "# the land model on a 2D plot.\n",
        "\n",
        "# Function to plot the points and the model\n",
        "def plot_points(land_points, test_points, test_classifications):\n",
        "    fig, ax = plt.subplots()\n",
        "\n",
        "    # Define colors for each continent\n",
        "    continent_colors = {\n",
        "        'South America': 'green',\n",
        "        'Europe': 'red',\n",
        "        'Asia': 'blue',\n",
        "        'Africa': 'purple',\n",
        "        'Australia': 'orange'\n",
        "    }\n",
        "\n",
        "    # Plot land points by continent\n",
        "    for continent, points in land_points.items():\n",
        "        land_x, land_y = zip(*points)\n",
        "        ax.scatter(land_x, land_y, color=continent_colors[continent], label=f'{continent}')\n",
        "\n",
        "    # Plot test points\n",
        "    for point, classification in zip(test_points, test_classifications):\n",
        "        color = 'green' if classification == 'Land' else 'blue'\n",
        "        ax.scatter(point[0], point[1], color=color, edgecolors='red', label=f'Test Point ({classification})')\n",
        "\n",
        "    # Place the legend outside the plot box\n",
        "    ax.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\n",
        "    plt.xlabel('Latitude')\n",
        "    plt.ylabel('Longitude')\n",
        "    plt.title('Land and Sea Points with Model')\n",
        "    plt.grid(False)  # Remove grid\n",
        "    plt.show()\n",
        "\n"
      ],
      "metadata": {
        "id": "yaHzaxDBVpf7"
      },
      "execution_count": 31,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#@title Main Execution\n",
        "\n",
        "# This section calculates the total grid points, prior probabilities, likelihoods,\n",
        "# classifies test points, prints the classifications, and plots the points and the model.\n",
        "\n",
        "# Total points in the grid\n",
        "total_points = len(grid_points)\n",
        "\n",
        "# Calculate prior probabilities\n",
        "P_land, P_sea = calculate_prior_probabilities(land_points, total_points)\n",
        "\n",
        "# Calculate likelihoods\n",
        "likelihoods_land, likelihoods_sea = calculate_likelihoods(grid_points, land_points)\n",
        "\n",
        "\n",
        "# Define a set of test points with varying distances to land masses\n",
        "test_points = [\n",
        "    # A set of test points with varying distances to land masses\n",
        "    (-20, -40), (50, 50), (-30, 160), (80, -170), (20, 60), (30, 60), (20, 50)\n",
        "]\n",
        "\n",
        "# Classify test points\n",
        "test_classifications = [classify_point(point, likelihoods_land) for point in test_points]\n",
        "\n",
        "# Print test point classifications\n",
        "print(\"\\nTest Point Classifications:\")\n",
        "for point, classification in zip(test_points, test_classifications):\n",
        "    print(f\"Point {point}: {classification}\")\n",
        "\n",
        "# Plot the points and the model\n",
        "plot_points(land_points, test_points, test_classifications)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 635
        },
        "id": "QxOWnUgnhH2Q",
        "outputId": "47c4603a-b5f1-480b-d5db-06e7b011a97a"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Test Point Classifications:\n",
            "Point (-20, -40): Sea\n",
            "Point (50, 50): Sea\n",
            "Point (-30, 160): Sea\n",
            "Point (80, -170): Sea\n",
            "Point (20, 60): Land\n",
            "Point (30, 60): Sea\n",
            "Point (20, 50): Sea\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Summary\n",
        "\n",
        "Grid points surrounding Asia showed the differences of the likelihood classification set at 0.5. Only one point (20,50) was considered a \"Land\" point while surrounding points (30, 60), (20, 50) were classified as \"Sea\" due to the classification threshold."
      ],
      "metadata": {
        "id": "z1lb8-rymZIr"
      }
    }
  ]
}
